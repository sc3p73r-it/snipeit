apiVersion: v1
kind: Namespace
metadata:
  name: snipe-it
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: snipeitdb-pv-volume
  labels:
    type: local
spec:
  storageClassName: local-storage
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  local:
    path: /mnt/snipeit_data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - worker2.kmagroup.local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: snipeitdb-pv-claim
  namespace: snipe-it
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snipeit-db
  namespace: snipe-it
  labels:
    app: snipeit-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snipeit-db
  template:
    metadata:
      labels:
        app: snipeit-db
    spec:
      containers:
      - name: mysql-snipe
        image: sc3p73r/snipe-mysql:v1.0.1
        resources:
          limits:
            memory: 512Mi
            cpu: "1"
          requests:
            memory: 256Mi
            cpu: "0.2"
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "P@ssw0rd"
        - name: MYSQL_DATABASE
          value: "snipeitdb"
        - name: MYSQL_USER
          value: "snipeituser"
        - name: MYSQL_PASSWORD
          value: "p@ssw0rd"
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/mysql
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: snipeitdb-pv-claim

